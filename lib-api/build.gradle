apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildtoolsVersion

    defaultConfig {
        minSdkVersion minSdk
        targetSdkVersion targetSdk

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    api project(":lib-common")

    // Kotlin
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    // Okhttp
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    // Moshi
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    // Dagger
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    testImplementation "junit:junit:$unitTestVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
    testImplementation("org.threeten:threetenbp:$threetenbpVersion") {
        exclude module: "com.jakewharton.threetenabp:threetenabp:$threetenabpVersion"
    }
}

ktlint {
    filter {
        exclude("com/ihsanbal/logging/**") // https://github.com/ihsanbal/LoggingInterceptor
    }
}
